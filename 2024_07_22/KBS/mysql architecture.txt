My sql 아키텍처

1. Mysql engine: 요청 쿼리에 대해 어떻게 실행할지 결정하는 역할
커넥션 핸들러
- 커넥션 및 쿼리 요청 관리

쿼리파서
- 요청을 단어 단위로 토큰화
- 문법 오류 체크
- 파서 트리 구성
- 전처리기 -> 테이블이나 컬럼에 접근 가능한지 확인

옵티마이저
- index 등의 유무에 따라 쿼리의 최적화된 실행 담당
- 규칙기반: 내장된 우선순위에 따라
- 비용 기반: 작업의 비용과 대상 테이블의 통계 정보에 따라

캐시와 버퍼
- 성능 향상을 위한 보조 저장소 
- 동일한 sql 쿼리 결과를 캐싱한는 역할
- 테이블 변경시 캐싱 데이터 변경 필요 -> 8.0부터 제거됨

쿼리 실행 엔진
- 실행 계획을 토대로 스토리지 엔진 호출

2. Storage Engine: 디스크와 통신하며 사용자 요청에 따라 데이터를 읽어오거나 가공하는 역할
Innodb default
버퍼풀
- 메인 메모리의 한 영역
- 테이블과 인덱스 데이터 캐싱 공간
- 페이지 단위 -> linked list -> least Recently used
- 변경된 데이터를 디스크에 반영하기전 버퍼링하는 공간
- 쓰기 지연 버퍼
언두 로그
- 변경되기전 데이터를 백업해두는 공간
- 트랜잭션 보장

리두 로그
- 영속성 보장

Mvcc
- 이전에는 Lock으로 구현
- multi version concurrency control
- 트랜잭션 격리 수준에 따라 다름
- 여러 버전의 데이터를 관리하여 잠금없이 읽기 가능
- repeatable read
- 트랜잭션 격리 수준 별
-- read uncommitted: 버퍼풀에서 조회
-- read committed, repeatable, serailuzable: 언두 로그애서 조회

트랜잭션- 레코드 단위 잠금
- 레코드 자차가 아니라 인덱스를 잠금
-- 검색에 사용한 인데스 레코드만 잠금
-- 풀스캔 -> 전부 잠금
