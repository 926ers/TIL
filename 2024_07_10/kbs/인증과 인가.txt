인증
session
클라이언트에 low한 데이터 저장X
세션의 만료시간
서버가 여러개가 되면?  --> session storage에서 관리 --> 클라이언트가 많으면?
--> 무상태성 X

token
세큐리티도 토큰 생성 --> 확장성이 있다 서버 인스턴스가 늘어나도 ㄱㅊ
이름, 권한, 만료시기등을 담자
엑세스 토큰이 탈취되면 위험

시큐리티에서 access토큰과 refresh 토큰생성후 refresh토큰만 저장
access토큰 만료시 refresh토큰을 다시 보내 access토큰 받음
무상태성 만족하지만 토큰 관리 필요

httponly? 자바스크맂트로 쿠키에 접근X
sliding session?
 세션을 지속적으로 이용하는 유저에게 자동으로 만료 기한을 늘려주는 방법입니다

인증서버
ssl/tls1.3

oauth
2.0 1.0보다 간소화
서비스에 id/pw를 알려주지 않아도됨
원할때 엑세스 토큰 권한취소 가능
결론
일반적인 웹 서비스처럼 cookie등을 이용해 세션 관리를 하는 방식을 사용할 수 없는
 stateless한 REST API등은 토큰 방식의 보안을 이용 할 수 밖에 없습니다. stateless하기 때문에 매 요청에 대한 인증을 거쳐야 하는데,
 이는 데이터베이스 등으로부터 토큰을 얻어오는 추가적인 I/O 작업이 불가피하고 이는 성능의 하락으로 이어집니다. 이를 해결해주기 위한 솔루션이 바로 JWT입니다.

JWT는 이런 장점과 함께 위에서 살펴봤듯이 여러가지 문제점들이 존재합니다.
 토큰의 탈취에 대한 취약성, 서버의 클라이언트 제어 불가, 빈번한 로그인 요청 등의 문제에 대한 해결 방법은 RefreshToken이나 Sliding Sessions 등의 전략을 도입하는 것입니다.
 하지만 이러한 전략들 역시 추가적인 IO 작업을 위한 성능 감소나, 편의를 위해 보안이 취약해지는 상황등이 발생할 가능성이 있습니다.
